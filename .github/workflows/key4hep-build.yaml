# Do not edit this file, it will be overwritten!
# The template file can be found in
# https://github.com/key4hep/key4hep-actions/blob/main/workflows/key4hep-build.yaml

name: Key4hep build
on:
  push:
    branches:
    - main
    - implement-histcmp
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '16 4 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        build_type: ["release", "nightly"]
        image: ["alma9"]
        stack: ["key4hep"]
        include:
          - build_type: nightly
            image: ubuntu24
            stack: key4hep
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: key4hep/key4hep-actions/cache-external-data@main
    - uses: key4hep/key4hep-actions/key4hep-build@main
      with:
        build_type: ${{ matrix.build_type }}
        image: ${{ matrix.image }}
        stack: ${{ matrix.stack }}

  histcmp_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: cvmfs-contrib/github-action-cvmfs@v4
    - uses: aidasoft/run-lcg-view@v4
      with:
        container: el9
        view-path: /cvmfs/sw-nightlies.hsf.org/key4hep
        run: |
          # Create virtual environment like pre-commit does
          python -m venv /root/histcmp-venv
          source /root/histcmp-venv/bin/activate
          
          # Install histcmp
          pip install histcmp==0.8.1
          
          # Export PYTHONPATH like pre-commit does
          export PYTHONPATH=$VIRTUAL_ENV/lib/python3.$(python3 -c 'import sys; print(f"{sys.version_info[1]}")')/site-packages:$PYTHONPATH
          
          # Make the script executable
          chmod +x CI/generate_material_scans.sh
          
          # Run in TEST and FAST mode for quick CI testing
          ./CI/generate_material_scans.sh --fast --quiet
          
          echo "=== Checking for generated files ==="
          find mat_scan_results/ -name "*.root" | head -10
          find reference_results/ -name "*.root" | head -10
          
          echo "=== Checking consolidated files ==="
          ls -la detector_geometries_*.root
          
          # Single histcmp comparison using consolidated files
          mkdir -p histcmp_results
          
          if [ -f "detector_geometries_ref.root" ] && [ -f "detector_geometries_monitored.root" ]; then
            echo "Running single histcmp comparison on consolidated files..."
            
            histcmp detector_geometries_ref.root detector_geometries_monitored.root \
              --title "Material Budget Comparison: All Detector Geometries" \
              --output "histcmp_results/detector_geometries_comparison" \
              --format png \
              || echo "Histcmp comparison failed"
              
            echo "=== Histcmp comparison completed ==="
            
            # List histograms in consolidated files for verification
            echo "=== Reference file contents ==="
            root -l -b -q -e "TFile f(\"detector_geometries_ref.root\"); f.ls(); f.Close();"
            
            echo "=== Monitored file contents ==="
            root -l -b -q -e "TFile f(\"detector_geometries_monitored.root\"); f.ls(); f.Close();"
            
          else
            echo "ERROR: Consolidated ROOT files not found"
            echo "  detector_geometries_ref.root exists: $([ -f detector_geometries_ref.root ] && echo yes || echo no)"
            echo "  detector_geometries_monitored.root exists: $([ -f detector_geometries_monitored.root ] && echo yes || echo no)"
            exit 1
          fi

    - name: Upload histcmp plots and results
      uses: actions/upload-artifact@v4
      if: always()  # Upload even if tests fail
      with:
        name: histcmp-results
        path: |
          histcmp_results/
          detector_geometries_*.root
          mat_scan_results/
          reference_results/